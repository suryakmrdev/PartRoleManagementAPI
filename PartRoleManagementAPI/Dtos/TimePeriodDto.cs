/*
 * Party Role Management
 *
 * This is Swagger UI environment generated for the TMF Party Role Management specification
 *
 * OpenAPI spec version: 2.0
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.ComponentModel.DataAnnotations;
using System.Runtime.Serialization;
using Newtonsoft.Json;

namespace PartRoleManagementAPI.Dto
{ 
    /// <summary>
    /// A base / value business entity used to represent a period of time between two timepoints.
    /// </summary>
    [DataContract]
    public partial class TimePeriodDto : IEquatable<TimePeriodDto>
    {
        /// <summary>
        /// End of the time period, using IETC-RFC-3339 format
        /// </summary>
        /// <value>End of the time period, using IETC-RFC-3339 format</value>

        [JsonPropertyName("endDateTime")]
        public DateTime? EndDateTime { get; set; }

        /// <summary>
        /// Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end
        /// </summary>
        /// <value>Start of the time period, using IETC-RFC-3339 format. If you define a start, you must also define an end</value>

        [JsonPropertyName("startDateTime")]
        public DateTime? StartDateTime { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class TimePeriod {\n");
            sb.Append("  EndDateTime: ").Append(EndDateTime).Append("\n");
            sb.Append("  StartDateTime: ").Append(StartDateTime).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        ///// <summary>
        ///// Returns the JSON string presentation of the object
        ///// </summary>
        ///// <returns>JSON string presentation of the object</returns>
        //public string ToJson()
        //{
        //    return JsonConvert.SerializeObject(this, Formatting.Indented);
        //}

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="obj">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object obj)
        {
            if (ReferenceEquals(null, obj)) return false;
            if (ReferenceEquals(this, obj)) return true;
            return obj.GetType() == GetType() && Equals((TimePeriodDto)obj);
        }

        /// <summary>
        /// Returns true if TimePeriodDto instances are equal
        /// </summary>
        /// <param name="other">Instance of TimePeriodDto to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(TimePeriodDto other)
        {
            if (ReferenceEquals(null, other)) return false;
            if (ReferenceEquals(this, other)) return true;

            return
                (
                    EndDateTime == other.EndDateTime ||
                    EndDateTime != null &&
                    EndDateTime.Equals(other.EndDateTime)
                ) &&
                (
                    StartDateTime == other.StartDateTime ||
                    StartDateTime != null &&
                    StartDateTime.Equals(other.StartDateTime)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                var hashCode = 41;
                // Suitable nullity checks etc, of course :)
                if (EndDateTime != null)
                    hashCode = hashCode * 59 + EndDateTime.GetHashCode();
                if (StartDateTime != null)
                    hashCode = hashCode * 59 + StartDateTime.GetHashCode();
                return hashCode;
            }
        }

        #region Operators
#pragma warning disable 1591

        public static bool operator ==(TimePeriodDto left, TimePeriodDto right)
        {
            return Equals(left, right);
        }

        public static bool operator !=(TimePeriodDto left, TimePeriodDto right)
        {
            return !Equals(left, right);
        }

#pragma warning restore 1591
        #endregion Operators
    }
}
